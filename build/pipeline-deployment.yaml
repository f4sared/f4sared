# Copyright 2021 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#            http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#############################################################################
# CI/CD steps for Cloud Build to test and deploy a TFX pipeline to Vertex AI.
#############################################################################

steps:
  # Clone the repository.

  - name: "gcr.io/cloud-builders/git"
    args:
      [
        "clone",
        "--single-branch",
        "--branch",
        "main",
        "https://github.com/f4sared/f4sared",
        "--depth",
        "1",
        "--verbose",
      ]
    id: "Clone Repository"

  # Build the image that encapsulates the pipeline.
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "us-central1-docker.pkg.dev/$PROJECT_ID/mle-pipeline/tfx-chicago-taxi:${SHORT_SHA}",
        ".",
      ]
    dir: "f4sared"
    id: "Build TFX Image"
    waitFor: ["Clone Repository"]

  #- name: 'gcr.io/cloud-builders/docker'
  #  args: ['push', 'us-central1-docker.pkg.dev/${PROJECT_ID}/mle-pipeline/tfx-chicago-taxi:${SHORT_SHA}']
  #  id: 'Push TFX Image'
  #  waitFor: ['Build TFX Image']

  # push to registry trainer
  - name: "gcr.io/cloud-builders/gsutil"
    args:
      [
        "cp",
        "src/pipeline/trainer.py",
        "gs://$PROJECT_ID/pipeline_module/chicago-vertex-pipelines/trainer.py",
      ]
    dir: "f4sared"
    id: "Upload trainer to GCS"
    waitFor: ["Build TFX Image"]

  # push to registry tuner
  - name: "gcr.io/cloud-builders/gsutil"
    args:
      [
        "cp",
        "src/pipeline/trainer_tune.py",
        "gs://$PROJECT_ID/pipeline_module/chicago-vertex-pipelines/trainer_tune.py",
      ]
    dir: "f4sared"
    id: "Upload tuner to GCS"
    waitFor: ["Upload trainer to GCS"]

  # build cicd image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "us-central1-docker.pkg.dev/$PROJECT_ID/mle-pipeline/cicd:latest",
        "build/.",
      ]
    dir: "f4sared"
    id: "Build cicd image"
    waitFor: ["Upload tuner to GCS"]

  # Compile the pipeline.
  - name: "us-central1-docker.pkg.dev/$PROJECT_ID/mle-pipeline/cicd:latest"
    entrypoint: "python"
    args:
      [
        "build/utils.py",
        "--mode",
        "compile-pipeline",
        "--pipeline-name",
        "chicago-vertex-pipelines",
      ]
    dir: "f4sared"
    env:
      - "PROJECT=$PROJECT_ID"
      - "REGION=us-central1"
      - "GCS_LOCATION=gs://$PROJECT_ID"
    id: "Compile Pipeline"
    #  waitFor: ['Local Test E2E Pipeline']
    waitFor: ["Build cicd image"]

  # Upload compiled pipeline to GCS.
  - name: "gcr.io/cloud-builders/gsutil"
    args:
      [
        "cp",
        "./chicago-vertex-pipelines_pipeline.json",
        "gs://$PROJECT_ID/pipeline_root/chicago-vertex-pipelines/chicago-vertex-pipelines.json",
      ]
    dir: "f4sared"
    id: "Upload Pipeline to GCS"
    waitFor: ["Compile Pipeline"]

  # Run pipeline in VertexAI.
  - name: "us-central1-docker.pkg.dev/$PROJECT_ID/mle-pipeline/cicd:latest"
    entrypoint: "python"
    args:
      [
        "build/utils.py",
        "--mode",
        "run-pipeline",
        "--pipeline-name",
        "chicago-vertex-pipelines",
      ]
    dir: "f4sared"
    env:
      - "PROJECT=$PROJECT_ID"
      - "REGION=us-central1"
      - "GCS_LOCATION=gs://$PROJECT_ID"
    id: "Run Pipeline"
    waitFor: ["Upload Pipeline to GCS"]
# Push TFX Image to Container Registy.
#images:
#- 'us-central1-docker.pkg.dev/${PROJECT_ID}/mle-pipeline/tfx-chicago-taxi'
timeout: 50000s
